<?php

// Data functions (insert, update, delete, form) for table tenants

// This script and data application were generated by AppGini 5.71
// Download AppGini for free from https://bigprof.com/appgini/download/

function tenants_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('tenants');
	if(!$arrPerm[1]){
		return false;
	}

	$data['fullname'] = makeSafe($_REQUEST['fullname']);
		if($data['fullname'] == empty_lookup_value){ $data['fullname'] = ''; }
	$data['gender'] = makeSafe($_REQUEST['gender']);
		if($data['gender'] == empty_lookup_value){ $data['gender'] = ''; }
	$data['national_id'] = makeSafe($_REQUEST['national_id']);
		if($data['national_id'] == empty_lookup_value){ $data['national_id'] = ''; }
	$data['phone_number'] = makeSafe($_REQUEST['phone_number']);
		if($data['phone_number'] == empty_lookup_value){ $data['phone_number'] = ''; }
	$data['email'] = makeSafe($_REQUEST['email']);
		if($data['email'] == empty_lookup_value){ $data['email'] = ''; }
	$data['registration_date'] = intval($_REQUEST['registration_dateYear']) . '-' . intval($_REQUEST['registration_dateMonth']) . '-' . intval($_REQUEST['registration_dateDay']);
	$data['registration_date'] = parseMySQLDate($data['registration_date'], '1');
	$data['house'] = makeSafe($_REQUEST['house']);
		if($data['house'] == empty_lookup_value){ $data['house'] = ''; }
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['exit_date'] = intval($_REQUEST['exit_dateYear']) . '-' . intval($_REQUEST['exit_dateMonth']) . '-' . intval($_REQUEST['exit_dateDay']);
	$data['exit_date'] = parseMySQLDate($data['exit_date'], '');
	$data['agreement_document'] = PrepareUploadedFile('agreement_document', 51200000,'txt|doc|docx|docm|odt|pdf|rtf', false, '');
	if($data['fullname']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Fullname': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['gender']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Gender': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['national_id']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'National ID': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['phone_number']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Phone number': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['registration_date']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Registration date': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['house']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'House': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['status']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Status': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from tenants where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['agreement_document']) $data['agreement_document'] = makeSafe($row['agreement_document']);
		}
	}

	// hook: tenants_before_insert
	if(function_exists('tenants_before_insert')){
		$args=array();
		if(!tenants_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `tenants` set       `fullname`=' . (($data['fullname'] !== '' && $data['fullname'] !== NULL) ? "'{$data['fullname']}'" : 'NULL') . ', `gender`=' . (($data['gender'] !== '' && $data['gender'] !== NULL) ? "'{$data['gender']}'" : 'NULL') . ', `national_id`=' . (($data['national_id'] !== '' && $data['national_id'] !== NULL) ? "'{$data['national_id']}'" : 'NULL') . ', `phone_number`=' . (($data['phone_number'] !== '' && $data['phone_number'] !== NULL) ? "'{$data['phone_number']}'" : 'NULL') . ', `email`=' . (($data['email'] !== '' && $data['email'] !== NULL) ? "'{$data['email']}'" : 'NULL') . ', `registration_date`=' . (($data['registration_date'] !== '' && $data['registration_date'] !== NULL) ? "'{$data['registration_date']}'" : 'NULL') . ', `house`=' . (($data['house'] !== '' && $data['house'] !== NULL) ? "'{$data['house']}'" : 'NULL') . ', ' . ($data['agreement_document'] != '' ? "`agreement_document`='{$data['agreement_document']}'" : '`agreement_document`=NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `exit_date`=' . (($data['exit_date'] !== '' && $data['exit_date'] !== NULL) ? "'{$data['exit_date']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"tenants_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: tenants_after_insert
	if(function_exists('tenants_after_insert')){
		$res = sql("select * from `tenants` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!tenants_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('tenants', $recID, getLoggedMemberID());

	return $recID;
}

function tenants_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('tenants');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='tenants' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='tenants' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: tenants_before_delete
	if(function_exists('tenants_before_delete')){
		$args=array();
		if(!tenants_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: invoices
	$res = sql("select `id` from `tenants` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `invoices` where `tenant`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "invoices", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "invoices", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='tenants_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='tenants_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `tenants` where `id`='$selected_id'", $eo);

	// hook: tenants_after_delete
	if(function_exists('tenants_after_delete')){
		$args=array();
		tenants_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='tenants' and pkValue='$selected_id'", $eo);
}

function tenants_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('tenants');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='tenants' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='tenants' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['fullname'] = makeSafe($_REQUEST['fullname']);
		if($data['fullname'] == empty_lookup_value){ $data['fullname'] = ''; }
	if($data['fullname']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Fullname': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['gender'] = makeSafe($_REQUEST['gender']);
		if($data['gender'] == empty_lookup_value){ $data['gender'] = ''; }
	if($data['gender']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Gender': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['national_id'] = makeSafe($_REQUEST['national_id']);
		if($data['national_id'] == empty_lookup_value){ $data['national_id'] = ''; }
	if($data['national_id']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'National ID': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['phone_number'] = makeSafe($_REQUEST['phone_number']);
		if($data['phone_number'] == empty_lookup_value){ $data['phone_number'] = ''; }
	if($data['phone_number']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Phone number': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['email'] = makeSafe($_REQUEST['email']);
		if($data['email'] == empty_lookup_value){ $data['email'] = ''; }
	$data['registration_date'] = intval($_REQUEST['registration_dateYear']) . '-' . intval($_REQUEST['registration_dateMonth']) . '-' . intval($_REQUEST['registration_dateDay']);
	$data['registration_date'] = parseMySQLDate($data['registration_date'], '1');
	if($data['registration_date']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Registration date': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['house'] = makeSafe($_REQUEST['house']);
		if($data['house'] == empty_lookup_value){ $data['house'] = ''; }
	if($data['house']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'House': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	if($data['status']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Status': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['exit_date'] = intval($_REQUEST['exit_dateYear']) . '-' . intval($_REQUEST['exit_dateMonth']) . '-' . intval($_REQUEST['exit_dateDay']);
	$data['exit_date'] = parseMySQLDate($data['exit_date'], '');
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['agreement_document_remove'] == 1){
		$data['agreement_document'] = '';
	}else{
		$data['agreement_document'] = PrepareUploadedFile('agreement_document', 51200000, 'txt|doc|docx|docm|odt|pdf|rtf', false, "");
	}

	// hook: tenants_before_update
	if(function_exists('tenants_before_update')){
		$args=array();
		if(!tenants_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `tenants` set       `fullname`=' . (($data['fullname'] !== '' && $data['fullname'] !== NULL) ? "'{$data['fullname']}'" : 'NULL') . ', `gender`=' . (($data['gender'] !== '' && $data['gender'] !== NULL) ? "'{$data['gender']}'" : 'NULL') . ', `national_id`=' . (($data['national_id'] !== '' && $data['national_id'] !== NULL) ? "'{$data['national_id']}'" : 'NULL') . ', `phone_number`=' . (($data['phone_number'] !== '' && $data['phone_number'] !== NULL) ? "'{$data['phone_number']}'" : 'NULL') . ', `email`=' . (($data['email'] !== '' && $data['email'] !== NULL) ? "'{$data['email']}'" : 'NULL') . ', `registration_date`=' . (($data['registration_date'] !== '' && $data['registration_date'] !== NULL) ? "'{$data['registration_date']}'" : 'NULL') . ', `house`=' . (($data['house'] !== '' && $data['house'] !== NULL) ? "'{$data['house']}'" : 'NULL') . ', ' . ($data['agreement_document']!='' ? "`agreement_document`='{$data['agreement_document']}'" : ($_REQUEST['agreement_document_remove'] != 1 ? '`agreement_document`=`agreement_document`' : '`agreement_document`=NULL')) . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `exit_date`=' . (($data['exit_date'] !== '' && $data['exit_date'] !== NULL) ? "'{$data['exit_date']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="tenants_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: tenants_after_update
	if(function_exists('tenants_after_update')){
		$res = sql("SELECT * FROM `tenants` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!tenants_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='tenants' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function tenants_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('tenants');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_house = thisOr(undo_magic_quotes($_REQUEST['filterer_house']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: gender
	$combo_gender = new Combo;
	$combo_gender->ListType = 0;
	$combo_gender->MultipleSeparator = ', ';
	$combo_gender->ListBoxHeight = 10;
	$combo_gender->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/tenants.gender.csv')){
		$gender_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/tenants.gender.csv')));
		$combo_gender->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($gender_data)));
		$combo_gender->ListData = $combo_gender->ListItem;
	}else{
		$combo_gender->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("male;;female")));
		$combo_gender->ListData = $combo_gender->ListItem;
	}
	$combo_gender->SelectName = 'gender';
	$combo_gender->AllowNull = false;
	// combobox: registration_date
	$combo_registration_date = new DateCombo;
	$combo_registration_date->DateFormat = "mdy";
	$combo_registration_date->MinYear = 1900;
	$combo_registration_date->MaxYear = 2100;
	$combo_registration_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_registration_date->MonthNames = $Translation['month names'];
	$combo_registration_date->NamePrefix = 'registration_date';
	// combobox: house
	$combo_house = new DataCombo;
	// combobox: status
	$combo_status = new Combo;
	$combo_status->ListType = 0;
	$combo_status->MultipleSeparator = ', ';
	$combo_status->ListBoxHeight = 10;
	$combo_status->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/tenants.status.csv')){
		$status_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/tenants.status.csv')));
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($status_data)));
		$combo_status->ListData = $combo_status->ListItem;
	}else{
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("tenant in;;tenant out")));
		$combo_status->ListData = $combo_status->ListItem;
	}
	$combo_status->SelectName = 'status';
	$combo_status->AllowNull = false;
	// combobox: exit_date
	$combo_exit_date = new DateCombo;
	$combo_exit_date->DateFormat = "mdy";
	$combo_exit_date->MinYear = 1900;
	$combo_exit_date->MaxYear = 2100;
	$combo_exit_date->DefaultDate = parseMySQLDate('', '');
	$combo_exit_date->MonthNames = $Translation['month names'];
	$combo_exit_date->NamePrefix = 'exit_date';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='tenants' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='tenants' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `tenants` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'tenants_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_gender->SelectedData = $row['gender'];
		$combo_registration_date->DefaultDate = $row['registration_date'];
		$combo_house->SelectedData = $row['house'];
		$combo_status->SelectedData = $row['status'];
		$combo_exit_date->DefaultDate = $row['exit_date'];
	}else{
		$combo_gender->SelectedText = ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_house->SelectedData = $filterer_house;
		$combo_status->SelectedText = ( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_gender->Render();
	$combo_house->HTML = '<span id="house-container' . $rnd1 . '"></span><input type="hidden" name="house" id="house' . $rnd1 . '" value="' . html_attr($combo_house->SelectedData) . '">';
	$combo_house->MatchText = '<span id="house-container-readonly' . $rnd1 . '"></span><input type="hidden" name="house" id="house' . $rnd1 . '" value="' . html_attr($combo_house->SelectedData) . '">';
	$combo_status->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_house__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['house'] : $filterer_house); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(house_reload__RAND__) == 'function') house_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function house_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#house-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_house__RAND__.value, t: 'tenants', f: 'house' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="house"]').val(resp.results[0].id);
							$j('[id=house-container-readonly__RAND__]').html('<span id="house-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=houses_view_parent]').hide(); }else{ $j('.btn[id=houses_view_parent]').show(); }


							if(typeof(house_update_autofills__RAND__) == 'function') house_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'tenants', f: 'house' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_house__RAND__.value = e.added.id;
				AppGini.current_house__RAND__.text = e.added.text;
				$j('[name="house"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=houses_view_parent]').hide(); }else{ $j('.btn[id=houses_view_parent]').show(); }


				if(typeof(house_update_autofills__RAND__) == 'function') house_update_autofills__RAND__();
			});

			if(!$j("#house-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_house__RAND__.value, t: 'tenants', f: 'house' },
					success: function(resp){
						$j('[name="house"]').val(resp.results[0].id);
						$j('[id=house-container-readonly__RAND__]').html('<span id="house-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=houses_view_parent]').hide(); }else{ $j('.btn[id=houses_view_parent]').show(); }

						if(typeof(house_update_autofills__RAND__) == 'function') house_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_house__RAND__.value, t: 'tenants', f: 'house' },
				success: function(resp){
					$j('[id=house-container__RAND__], [id=house-container-readonly__RAND__]').html('<span id="house-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=houses_view_parent]').hide(); }else{ $j('.btn[id=houses_view_parent]').show(); }

					if(typeof(house_update_autofills__RAND__) == 'function') house_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/tenants_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/tenants_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Tenant details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return tenants_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return tenants_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return tenants_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#fullname').replaceWith('<div class=\"form-control-static\" id=\"fullname\">' + (jQuery('#fullname').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#gender').replaceWith('<div class=\"form-control-static\" id=\"gender\">' + (jQuery('#gender').val() || '') + '</div>'); jQuery('#gender-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#national_id').replaceWith('<div class=\"form-control-static\" id=\"national_id\">' + (jQuery('#national_id').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#phone_number').replaceWith('<div class=\"form-control-static\" id=\"phone_number\">' + (jQuery('#phone_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#email').replaceWith('<div class=\"form-control-static\" id=\"email\">' + (jQuery('#email').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#email, #email-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#registration_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#registration_dateDay, #registration_dateMonth, #registration_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#house').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#house_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#agreement_document').replaceWith('<div class=\"form-control-static\" id=\"agreement_document\">' + (jQuery('#agreement_document').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#agreement_document, #agreement_document-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#status').replaceWith('<div class=\"form-control-static\" id=\"status\">' + (jQuery('#status').val() || '') + '</div>'); jQuery('#status-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#exit_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#exit_dateDay, #exit_dateMonth, #exit_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(gender)%%>', $combo_gender->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(gender)%%>', $combo_gender->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(registration_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_registration_date->GetHTML(true) . '</div>' : $combo_registration_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(registration_date)%%>', $combo_registration_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(house)%%>', $combo_house->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(house)%%>', $combo_house->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(house)%%>', urlencode($combo_house->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(status)%%>', $combo_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(status)%%>', $combo_status->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(exit_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_exit_date->GetHTML(true) . '</div>' : $combo_exit_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(exit_date)%%>', $combo_exit_date->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'house' => array('houses', 'House'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fullname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(gender)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(national_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(phone_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(registration_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(house)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agreement_document)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=51200000>'.$Translation['upload image'].' <input type="file" name="agreement_document" id="agreement_document">'), $templateCode);
	if($AllowUpdate && $row['agreement_document'] != ''){
		$templateCode = str_replace('<%%REMOVEFILE(agreement_document)%%>', '<br><input type="checkbox" name="agreement_document_remove" id="agreement_document_remove" value="1"> <label for="agreement_document_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(agreement_document)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(exit_date)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fullname)%%>', safe_html($urow['fullname']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fullname)%%>', html_attr($row['fullname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fullname)%%>', urlencode($urow['fullname']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(gender)%%>', safe_html($urow['gender']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(gender)%%>', html_attr($row['gender']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gender)%%>', urlencode($urow['gender']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(national_id)%%>', safe_html($urow['national_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(national_id)%%>', html_attr($row['national_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(national_id)%%>', urlencode($urow['national_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(phone_number)%%>', safe_html($urow['phone_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(phone_number)%%>', html_attr($row['phone_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(phone_number)%%>', urlencode($urow['phone_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(email)%%>', safe_html($urow['email']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(email)%%>', html_attr($row['email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(email)%%>', urlencode($urow['email']), $templateCode);
		$templateCode = str_replace('<%%VALUE(registration_date)%%>', @date('m/d/Y', @strtotime(html_attr($row['registration_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(registration_date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['registration_date'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(house)%%>', safe_html($urow['house']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(house)%%>', html_attr($row['house']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(house)%%>', urlencode($urow['house']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agreement_document)%%>', safe_html($urow['agreement_document']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agreement_document)%%>', html_attr($row['agreement_document']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agreement_document)%%>', urlencode($urow['agreement_document']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', safe_html($urow['status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		$templateCode = str_replace('<%%VALUE(exit_date)%%>', @date('m/d/Y', @strtotime(html_attr($row['exit_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(exit_date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['exit_date'])))), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fullname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fullname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(gender)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gender)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(national_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(national_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(phone_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(phone_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(registration_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(registration_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(house)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(house)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agreement_document)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agreement_document)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(exit_date)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(exit_date)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
			$templateCode.="\n\tif(document.getElementById('emailEdit')){ document.getElementById('emailEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('emailEditLink')){ document.getElementById('emailEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('agreement_documentEdit')){ document.getElementById('agreement_documentEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('agreement_documentEditLink')){ document.getElementById('agreement_documentEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('tenants');
	if($selected_id){
		$jdata = get_joined_record('tenants', $selected_id);
		if($jdata === false) $jdata = get_defaults('tenants');
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('html_attr_tags_ok', $rdata)),
		'jdata' => array_map('nl2br', array_map('html_attr_tags_ok', $jdata))
	);
	$templateCode .= loadView('tenants-ajax-cache', $cache_data);

	// hook: tenants_dv
	if(function_exists('tenants_dv')){
		$args=array();
		tenants_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>